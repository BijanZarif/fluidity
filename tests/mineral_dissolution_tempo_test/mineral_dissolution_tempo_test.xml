<?xml version='1.0' encoding='utf-8'?>
<testproblem>
  <name>mineral_dissolution_tempo_test</name>
  <owner userid="LCai"/>
  <tags>diml leaching</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>make input;
darcy_impes mineral_dissolution_tempo_test.diml;</command_line>
  </problem_definition>
  <variables>
    <variable name="data" language="python">import fluidity.diagnostics.fluiditytools as fluidity_tools
import numpy
py = fluidity_tools.stat_parser('./src/mineral_dissolusion_py_chalpr.stat')
fr = fluidity_tools.stat_parser('./mineral_dissolution_tempo_test.stat')


Cupy=py['Phase2']['Cu'][u'max']
Fe3py=py['Phase2']['Fe3'][u'min']
extpy=py['Phase2']['eps_CuFeS2'][u'max']
ext2py=py['Phase2']['eps_FeS2'][u'max']


Cufr=fr['Phase2']['Cu'][u'max']
Fe3fr=fr['Phase2']['Fe3'][u'min']
extfr=fr['Phase1']['chal_current_extraction'][u'max']
ext2fr=fr['Phase1']['pyri_current_extraction'][u'max']

dtpy=py['dt'][u'value'][0]/2.0
dtfr=fr['dt'][u'value'][0]/2.0

#numerical integration by Trapezoidal rule
cu1=dtpy*(Cupy[0]+2.0*sum(Cupy[1:(len(Cupy)-1)])+Cupy[len(Cupy)-1])
Fe31=dtpy*(Fe3py[0]+2.0*sum(Fe3py[1:(len(Fe3py)-1)])+Fe3py[len(Fe3py)-1])
cu2=dtfr*(Cufr[0]+2.0*sum(Cufr[1:(len(Cufr)-1)])+Cufr[len(Cufr)-1])
Fe32=dtfr*(Fe3fr[0]+2.0*sum(Fe3fr[1:(len(Fe3fr)-1)])+Fe3fr[len(Fe3fr)-1])
dIntCu=cu1-cu2
dIntFe3=Fe31-Fe32
dIntext=dtpy*(extpy[0]+2.0*sum(extpy[1:(len(extpy)-1)])+extpy[len(extpy)-1])-dtfr*(extfr[0]+2.0*sum(extfr[1:(len(extfr)-1)])+extfr[len(extfr)-1])
dIntext2=dtpy*(ext2py[0]+2.0*sum(ext2py[1:(len(ext2py)-1)])+ext2py[len(ext2py)-1])-dtfr*(ext2fr[0]+2.0*sum(ext2fr[1:(len(ext2fr)-1)])+ext2fr[len(ext2fr)-1])

dCumax=max(Cupy)-max(Cufr)
dFe3max=max(Fe3py)-max(Fe3fr)
dextmin=min(extpy)-min(extfr)
dextmax=max(extpy)-max(extfr)
dext2min=min(ext2py)-min(ext2fr)
dext2max=max(ext2py)-max(ext2fr)


data={'dIntCu':dIntCu,'dIntFe3':dIntFe3,'dIntext':dIntext,'dIntext2':dIntext2,'dCumax':dCumax,'dFe3max':dFe3max,'dextmin':dextmin,'dextmax':dextmax,'dext2min':dext2min,'dext2max':dext2max}</variable>
    <variable name="solvers_converged" language="python">import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files</variable>
  </variables>
  <pass_tests>
    <test name="Solvers_converged" language="python">assert(solvers_converged)</test>
    <test name="Integration_error" language="python">import fluidity_tools

fluidity_tools.compare_variable(331.82668924133759,data['dIntFe3'], 0.0001)

fluidity_tools.compare_variable(-567.45366785644728,data['dIntCu'], 0.0001)

fluidity_tools.compare_variable(0.0,data['dIntext'], 0.00001)

fluidity_tools.compare_variable(0.0,data['dIntext2'], 0.0000001)</test>
    <test name="Bound" language="python">import fluidity_tools

fluidity_tools.compare_variable(0.0,data['dextmax'], 1.0e-10)

fluidity_tools.compare_variable(0.0,data['dextmin'], 1.0e-10)

fluidity_tools.compare_variable(0.0,data['dext2min'], 1.0e-11)

fluidity_tools.compare_variable(0.0,data['dext2max'], 1.0e-11)

fluidity_tools.compare_variable(-0.00093430267557437219,data['dFe3max'], 1.0e-7)

fluidity_tools.compare_variable(-0.0012191919447506194,data['dCumax'], 1.0e-6)</test>
  </pass_tests>
</testproblem>
