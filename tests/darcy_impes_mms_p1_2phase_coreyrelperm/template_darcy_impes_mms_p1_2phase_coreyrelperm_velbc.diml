<?xml version='1.0' encoding='utf-8'?>
<darcy_impes_options>
  <geometry>
    <dimension>
      <integer_value rank="0">$DOMAIN_DIM</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="$MESH_FILE">
        <format name="$MESH_FORMAT"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
          <element_type>
            <string_value>lagrangian</string_value>
          </element_type>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="ElementWiseMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">0</integer_value>
          </polynomial_degree>
          <element_type>
            <string_value>lagrangian</string_value>
          </element_type>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="SaturationSourceMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
          <element_type>
            <string_value>lagrangian</string_value>
          </element_type>
        </mesh_shape>
        <mesh_continuity>
          <string_value>continuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">1</integer_value>
      </degree>
      <controlvolume_surface_degree>
        <integer_value rank="0">1</integer_value>
      </controlvolume_surface_degree>
    </quadrature>
    <disable_geometric_data_cache/>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">$FINISH_TIME</real_value>
      </constant>
    </dump_period>
    <output_mesh name="PressureMesh"/>
    <stat>
      <output_at_start/>
    </stat>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">$TIME_STEP</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">$FINISH_TIME</real_value>
    </finish_time>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">$GRAVITY_MAGNITUDE</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="ElementWiseMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value shape="$DOMAIN_DIM" dim1="dim" rank="1">$GRAVITY_DIRECTION_${DOMAIN_DIM}D</real_value>
            </constant>
          </value>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="Phase1">
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <solver name="DefaultSolverOptionsGMRESMG">
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="mg"/>
          <relative_error>
            <real_value rank="0">1.0e-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $PRESSURE1_${DOMAIN_DIM}D</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="outlet_pressure">
          <surface_ids>
            <integer_value shape="1" rank="1">$OUTLET_ID</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_strongly/>
  	    <python>
              <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $PRESSURE1_${DOMAIN_DIM}D</string_value>
  	    </python>
          </type>
        </boundary_conditions>
  	$BEGIN_RM_IF_1D
        <boundary_conditions name="wall_pressure">
          <surface_ids>
            <integer_value shape="$WALL_NUM" rank="1">$WALL_IDS</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_strongly/>
  	    <python>
              <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $PRESSURE1_${DOMAIN_DIM}D</string_value>
  	    </python>
          </type>
        </boundary_conditions>
	$END_RM_IF_1D
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Saturation" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <scalar_field name="Source" rank="0">
          <prescribed>
            <mesh name="SaturationSourceMesh"/>
            <value name="WholeMesh">
              <python>
                <string_value type="code" lines="20" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $SOURCE_SATURATION1_${DOMAIN_DIM}D</string_value>
              </python>
            </value>
            <stat>
              <include_cv_stats/>
            </stat>
          </prescribed>
        </scalar_field>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="RelativePermeability" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <correlation name="Corey2Phase">
        </correlation>
        <face_value name="FirstOrderUpwind"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Viscosity" rank="0">
      <prescribed>
        <mesh name="ElementWiseMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">$VISCOSITY1</real_value>
          </constant>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <equation_of_state name="IncompressibleLinear">
          <reference_density>
            <real_value rank="0">$DENSITY1</real_value>
          </reference_density>
        </equation_of_state>
        <face_value name="FirstOrderUpwind"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <vector_field name="DarcyVelocity" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
    <scalar_field name="DarcyVelocityOverPorosityCFL" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <vector_field name="TotalDarcyVelocity" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
    <scalar_field name="DivergenceTotalDarcyVelocity" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Mobility" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="TotalMobility" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="FractionalFlow" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="SumSaturation" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="AveragePressure" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <vector_field name="BulkDarcyVelocity" rank="1">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
    <scalar_field name="AnalyticPressure">
      <prescribed>
        <mesh name="CoordinateMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $PRESSURE1_${DOMAIN_DIM}D</string_value>
          </python>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="PressureAbsError">
      <diagnostic>
        <mesh name="CoordinateMesh"/>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="Pressure" source_field_2_name="AnalyticPressure" material_phase_support="single" source_field_1_type="scalar">
          <absolute_difference/>
        </algorithm>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="AnalyticDarcyVelocityMagnitude">
      <prescribed>
        <mesh name="CoordinateMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $DARCY_VELOCITY1_MAGNITUDE_${DOMAIN_DIM}D</string_value>
          </python>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
  </material_phase>
  <material_phase name="Phase2">
    <scalar_field name="Pressure" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Saturation" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $SATURATION2_${DOMAIN_DIM}D</string_value>
          </python>
        </initial_condition>
        <scalar_field name="Source" rank="0">
          <prescribed>
            <mesh name="SaturationSourceMesh"/>
            <value name="WholeMesh">
              <python>
                <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $SOURCE_SATURATION2_${DOMAIN_DIM}D</string_value>
              </python>
            </value>
            <stat>
              <include_cv_stats/>
            </stat>
          </prescribed>
        </scalar_field>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="RelativePermeability" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Viscosity" rank="0">
      <prescribed>
        <mesh name="ElementWiseMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">$VISCOSITY2</real_value>
          </constant>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <equation_of_state name="IncompressibleLinear">
          <reference_density>
            <real_value rank="0">$DENSITY2</real_value>
          </reference_density>
        </equation_of_state>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <vector_field name="DarcyVelocity" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
  	<boundary_conditions name="inlet_velocity">
          <surface_ids>
            <integer_value shape="1" rank="1">$INLET_ID</integer_value>
          </surface_ids>
          <type name="prescribed_normal_flow">
            <python>
              <string_value type="code" lines="20" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $DARCY_VELOCITY2_X_${DOMAIN_DIM}D</string_value>
            </python>
          </type>
        </boundary_conditions>
  	$BEGIN_RM_IF_1D
  	<boundary_conditions name="wall_velocity">
          <surface_ids>
            <integer_value shape="$WALL_NUM" rank="1">$WALL_IDS</integer_value>
          </surface_ids>
          <type name="no_normal_flow">
          </type>
        </boundary_conditions>
  	$END_RM_IF_1D
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
    <scalar_field name="DarcyVelocityOverPorosityCFL" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Mobility" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="FractionalFlow" rank="0">
      <diagnostic>
        <mesh name="PressureMesh"/>
        <algorithm name="Internal"/>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="AnalyticSaturation">
      <prescribed>
        <mesh name="CoordinateMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $SATURATION2_${DOMAIN_DIM}D</string_value>
          </python>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="SaturationAbsError">
      <diagnostic>
        <mesh name="CoordinateMesh"/>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="Saturation" source_field_2_name="AnalyticSaturation" material_phase_support="single" source_field_1_type="scalar">
          <absolute_difference/>
        </algorithm>
        <stat>
          <include_cv_stats/>
        </stat>
        <consistent_interpolation/>
      </diagnostic>
    </scalar_field>
    <scalar_field name="AnalyticDarcyVelocityMagnitude">
      <prescribed>
        <mesh name="CoordinateMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  from numpy import sqrt, pi, cos, sin, exp
  return $DARCY_VELOCITY2_MAGNITUDE_${DOMAIN_DIM}D</string_value>
          </python>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
  </material_phase>
  <porous_media>
    <scalar_field name="Porosity">
      <prescribed>
        <mesh name="ElementWiseMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">$POROSITY</real_value>
          </constant>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
    <scalar_field name="AbsolutePermeability">
      <prescribed>
        <mesh name="ElementWiseMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">$ABSOLUTE_PERMEABILITY</real_value>
          </constant>
        </value>
        <stat>
          <include_cv_stats/>
        </stat>
      </prescribed>
    </scalar_field>
  </porous_media>
</darcy_impes_options>
